/*
 * Copyright 2022 Szymon Micyk
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'groovy'
    id 'application'
    id 'idea'
    id 'eclipse'
    id 'ivy-publish'
    id 'codenarc'
    id 'pl.allegro.tech.build.axion-release' version '1.13.2'
}

repositories {
    mavenCentral()
}

scmVersion {
    tag {
        prefix = 'v'
        versionSeparator = ''
        initialVersion = { config, position -> '0.1.0' }
    }

    hooks {
        pre 'commit', { version, position -> "Release $version"}
    }
}

project.group = 'net.simonix.scripts'
project.version = scmVersion.version

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation('org.codehaus.groovy:groovy-all:3.0.7')

    implementation('info.picocli:picocli:4.6.1')
    implementation('info.picocli:picocli-groovy:4.6.1')

    implementation('commons-fileupload:commons-fileupload:1.4')

    runtimeOnly('javax.servlet:servlet-api:2.4')

    // testing and mocking
    testImplementation platform('org.spockframework:spock-bom:2.0-groovy-3.0')
    testImplementation ('org.spockframework:spock-core')
    testImplementation ('org.spockframework:spock-junit4')
}

codenarc {
    toolVersion = '2.1.0'
    configFile = file("${rootProject.projectDir}/config/codenarc/rules.groovy")
    reportFormat = 'html'
    ignoreFailures = true
}

codenarcMain {
    compilationClasspath = sourceSets.main.compileClasspath + sourceSets.main.output
}

codenarcTest {
    compilationClasspath = codenarcMain.compilationClasspath + sourceSets.test.compileClasspath + sourceSets.test.output
}

//* Test configuration *//
tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        events 'started', 'passed'
    }
}

application {
    mainClass = 'net.simonix.scripts.harventer.Script'
    applicationName = 'harventer'
}

publishing {
    repositories {
        ivy {
            artifactPattern "${System.properties['user.home']}/.groovy/grapes/[organization]/[module]/jars/[artifact]-[revision](.[ext])"
            ivyPattern "${System.properties['user.home']}/.groovy/grapes/[organization]/[module]/ivy-[revision].xml"
        }
    }
    publications {
       ivy(IvyPublication) {
            organisation = project.group
            module = 'harventer'
            revision = project.version

            descriptor.status = 'release'

            from components.java
        }
    }
}
